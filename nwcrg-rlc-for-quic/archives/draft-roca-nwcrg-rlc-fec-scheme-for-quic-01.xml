<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
    which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
    There has to be one entity for each item to be referenced. 
    An alternate method (rfc include) is described in the references. -->

<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
    please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
    (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
    (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="info" docName="draft-roca-nwcrg-rlc-fec-scheme-for-quic-01" ipr="trust200902">
 <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->

 <!-- ***** FRONT MATTER ***** -->

<front>
	
   <title abbrev="RLC for QUIC">Sliding Window Random Linear Code (RLC) Forward Erasure Correction (FEC) Schemes for QUIC</title>

   <author fullname="Vincent Roca" initials="V." surname="Roca">
     <organization>INRIA</organization>
     <address>
       <postal>
         <street></street>
         <city>Univ. Grenoble Alpes</city>
         <region></region>
         <code></code>
         <country>France</country>
       </postal>
       <phone></phone>
       <email>vincent.roca@inria.fr</email>
     </address>
   </author>

   <author fullname="Ian Swett" initials="I." surname="Swett">
     <organization>Google</organization>
     <address>
       <postal>
         <street></street>
         <city>Cambridge</city>
         <region>MA</region>
         <code></code>
         <country>US</country>
       </postal>
       <phone></phone>
       <email>ianswett@google.com</email>
     </address>
   </author>

  <author fullname="Marie-Jose Montpetit" initials="M-J." surname="Montpetit">
     <organization>Triangle Video</organization>
     <address>
       <postal>
         <street></street>
         <city>Boston</city>
         <region>MA</region>
         <code></code>
         <country>US</country>
       </postal>
       <phone></phone>
       <email>marie@mjmontpetit.com</email>
     </address>
   </author>

   <date/>

   <area>IRTF</area>

   <workgroup>nwcrg</workgroup>

   <keyword>RLC, FEC Scheme, QUIC, loss recovery, FEC coding, frame format, negotiation</keyword>

   <abstract>
<t>
This document specifies Sliding Window Random Linear Code (RLC) Forward Erasure Correction (FEC) Schemes for the QUIC transport protocol, in order to recover from packet losses.
</t>
   </abstract>

</front>

<middle>

	<section title="Introduction">
	<!-- ====================== -->

<t>
QUIC <xref target="QUIC-transport"/> is a new transport that aims at improving network performance by enabling out of order delivery, partial reliability, and methods of recovery besides retransmission, while also improving security.
This document specifies FEC schemes for Sliding Window Random Linear Code (RLC) <xref target="RLC"/> to recover from lost packets within a single QUIC stream or across several QUIC streams, compliant with the FEC coding framework for QUIC <xref target="Coding4QUIC"/>.
</t>

<t>
The ability to add FEC coding in QUIC may be beneficial in several situations:
<list style="symbols">
	<t>for a robust transmission of latency sensitive traffic, for instance real-time flows, since it enables to recover packet losses independently of the round trip time;</t>
	<t>for the transmission of contents to a large set of QUIC reception endpoints, since the same repair frame may help recovering several different packet losses at different receivers;</t>
	<t>for multipath communications, since repair traffic adds diversity.</t>
</list>
</t>

	</section>

	<section anchor="definitionsAndAbbreviations" title="Definitions and Abbreviations">
	<!-- ====================== -->

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in <xref target="RFC2119"/>.
</t>

<t>
Terms and definitions that apply to coding are available in <xref target="nc-taxonomy"/>.
More specifically, this document uses the following definitions:
<list style="hanging">
	<t hangText="Packet versus Symbol:">	a Packet is the unit of data that is exchanged over the network while a Symbol is
		the unit of data that is manipulated during the encoding and decoding operations</t>

	<t hangText="Source Symbol:">	a unit of data originating from the source that is used as input to encoding operations</t>

	<t hangText="Repair Symbol:">	a unit of data that is the result of a coding operation</t>

</list></t>

<t>This document uses the following abbreviations: <list style="hanging">
	<t hangText="E:">		size of an encoding symbol (i.e., source or repair symbol), assumed fixed (in bytes)</t>
</list></t>

	</section>


<!-- =========================================================================================== -->

<section anchor="CommonProcedures" title="Procedures">
<!-- ================ -->
<t>
This section introduces the procedures that are used by these FEC Schemes.
</t>

	<section anchor="CommonProc_adui_creation" title="Source Symbols Mapping">
	<!-- ==================================== -->

<t>
The present FEC Scheme follows the source symbols mapping specified in <xref target="Coding4QUIC"/>.
<xref target="fig_frame_2_ss_mapping"/> illustrates this mapping.
</t>

<figure anchor="fig_frame_2_ss_mapping" title="Example of source symbol mapping, when the E value is relatively small.">
        <artwork><![CDATA[
 < -E- > < -E- > < -E- > < -E- >
+-------+-------+-------+-------+
|< -- Frame 1 -- >< ----- Frame |  source symbols 0, 1, 2, 3
+-------+-------+-------+-------+
| 2 ----- >< --- Frame 3 -- >< -|  source symbols 4, 5, 6, 7
+-------+-------+----+--+-------+
| Frame 4 - >< -F5- >|             source symbols 8, 9 and 10
+-------+-------+----+             (incomplete)
]]></artwork>
</figure>

	</section>

	<section  anchor="CommonProc_prng" title="Pseudo-Random Number Generator (PRNG)">
	<!-- ====================== -->

<t>
The RLC FEC Schemes defined in this document rely on the TinyMT32 PRNG defined in <xref target="RLC"/>.
</t>

	</section>

	<section anchor="CommonProc_coef_generation_func" title="Coding Coefficients Generation Function">
	<!-- ====================== -->

<t>
The coding coefficients, used during the encoding process, are generated at the RLC encoder by the generate_coding_coefficients()
function each time a new repair symbol needs to be produced.
This specification uses the generate_coding_coefficients() defined in <xref target="RLC"/>.
</t>

	</section>

</section>

<!-- =========================================================================================== -->

<section anchor="rlc-single-stream" title="Sliding Window RLC FEC Scheme over GF(2^^8) when Protecting a Single QUIC Stream">
<!-- ==================================== -->

<t>
This fully-specified FEC Scheme defines the Sliding Window Random Linear Codes (RLC) over GF(2^^8) when protecting a single QUIC stream.
</t>

	<section title="Formats and Codes">
	<!-- ==================================== -->

		<section title="Configuration Information">
		<!-- ================ -->

<t>
This section provides the RLC configuration information that needs to be shared during QUIC negotiation between the QUIC sender and receiver endpoints in order to synchronize them.
</t>

<t>
<list style="symbols">
<t>FEC Encoding ID (8 bits):
	the value assigned to this fully specified FEC Scheme MUST be XXXX, as assigned by IANA (<xref target="iana"/>).
	This FEC Encoding ID is used during the QUIC negotiation to uniquely identify the RLC FEC Scheme for QUIC;</t>

<t>Encoding symbol size, E (in bytes) (16 bits):
	a non-negative integer that indicates the size of each source and repair symbol, in bytes.
	This element is required both by the QUIC sender endpoint (RLC encoder) and the QUIC receiver endpoint(s) (RLC decoder).</t>
</list>
</t>

<t>
TODO: specify exact format, with binary encoding, to be carried within the opaque 32-bit field during negotiation.
</t>


		</section>

		<section title="REPAIR Frame Format">
		<!-- ================ -->

<t>
The RLC FEC Scheme does not use any explicit Source FEC Payload ID, meaning that QUIC STREAM frame format is not modified.
</t>

<t>
On the opposite, the RLC FEC Scheme requires QUIC REPAIR frames to convey enough information.
This section specifies the REPAIR frame format specific to the RLC FEC Scheme and a single QUIC stream.
Note that the notion of REPAIR frame format is equivalent to the notion of Repair FEC Payload ID in <xref target="RLC"/>.
</t>

<figure anchor="fig_repair_frame_format_1_stream" title="REPAIR frame format when protecting a single QUIC stream.">
        <artwork><![CDATA[
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         Stream ID (i)                       ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|               [Offset of First Source Symbol in EW (i)]     ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         [Length (i)]                        ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|       Repair_Key              |  DT   |NSS (# src symb in ew) |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                        Stream Data                          ...
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+]]></artwork>
</figure>

<t>
More precisely, the REPAIR frame format is composed of the following fields (<xref target="fig_repair_frame_format_1_stream"/>):
<list style="hanging">
<t hangText="Stream ID (variable-size field):">
	a variable-length integer indicating the stream ID of the stream. See <xref target="QUIC-transport"/>.
	The Stream ID for an RLC REPAIR frame MUST be equal to the Stream ID used for the data stream it protects; </t>

<t hangText="Offset of First Source Symbol in the Encoding Window (variable-size field):">
	a variable-length integer specifying the byte offset in the stream for the first source symbol of the encoding window.</t>

<t hangText="Length (variable-size field):">
	a variable-length integer specifying the length of the Stream Data field in this REPAIR frame.
	This length MUST be a non zero multiple of the source symbol size, E, since a REPAIR frame contains one or more repair symbols for this stream;</t>

<t hangText="Repair_Key (16-bit field):">
	this unsigned integer is used as a seed by the coefficient generation function (<xref target="CommonProc_coef_generation_func"/>)
	in order to generate the desired number of coding coefficients.
	When a FEC Repair Packet contains several repair symbols, this repair key value is that of the first repair symbol.
	The remaining repair keys can be deduced by incrementing by 1 this value, up to a maximum value of 65535 after which it loops back to 0.
	</t>

<t hangText="Density Threshold for the coding coefficients, DT (4-bit field):">
	this unsigned integer carries the Density Threshold (DT) used by the coding coefficient generation function <xref target="CommonProc_coef_generation_func"/>.
	More precisely, it controls the probability of having a non zero coding coefficient, which equals (DT+1) / 16.
	When a FEC Repair Packet contains several repair symbols, the DT value applies to all of them; </t>

<t hangText="Number of Source Symbols in the encoding window, NSS (12-bit field):">
	this unsigned integer indicates the number of source symbols in the encoding window when this repair symbol was generated.
	When a FEC Repair Packet contains several repair symbols, this NSS value applies to all of them; </t>

<t hangText="Stream Data:">
	data for this repair symbol(s).</t>
</list>
</t>

		</section>

		<section title="Additional Procedures">
		<!-- ================ -->
		</section>

	</section>

	<section title="FEC Code Specification">
	<!-- ================ -->

<t>
This RLC FEC Scheme relies on the FEC code specification defined in <xref target="RLC"/>.
</t>

		<section title="Encoding Side">
		<!-- ================ -->

<t>
<xref target="RLC"/> high level description of a Sliding Window RLC encoder also applies here to this FEC Scheme.
</t>

		</section>

		<section title="Decoding Side">
		<!-- ================ -->

<t>
<xref target="RLC"/> high level description of a Sliding Window RLC decoder also applies here to this FEC Scheme.
</t>

		</section>

	</section>

</section>


<!-- =========================================================================================== -->

<section anchor="rlc-several-streams" title="Sliding Window RLC FEC Scheme over GF(2^^8) when Protecting Several QUIC Streams">
<!-- ==================================== -->

<t>
This section focusses on the general case where FEC protection is globally applied across two or more QUIC streams.
</t>

<t>
TODO
</t>

</section>


<!-- =========================================================================================== -->


	<section title="Security Considerations">
	<!-- ====================== -->

<t>TBD
</t>

	</section>

	<section anchor="iana" title="IANA Considerations">
	<!-- ====================== -->

<t>
This document registers two values in the "QUIC FEC Encoding IDs" registry as follows:
<list style="symbols">
        <t>XXXX refers to the Sliding Window Random Linear Codes (RLC) over GF(2^^8) FEC Scheme for a Single QUIC Stream, as defined in <xref target="rlc-single-stream"/> of this document.</t>
        <t>YYYY refers to the Sliding Window Random Linear Codes (RLC) over GF(2^^8) FEC Scheme for a Several QUIC Stream, as defined in <xref target="rlc-several-streams"/> of this document.</t>
</list>
</t>

	</section>

	<section title="Acknowledgments">
	<!-- ====================== -->

<t>TBD
</t>

	</section>


</middle>

<!-- =========================================================================================== -->

 <back>

	<references title="Normative References">
	<!-- ====================== -->

	&RFC2119;

	<!-- https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-quic-transport.xml -->
	<reference anchor="QUIC-transport" target="https://datatracker.ietf.org/doc/draft-ietf-quic-transport/">
		<front>
			<title>QUIC: A UDP-Based Multiplexed and Secure Transport</title>
			<author initials="J." surname="Iyengar" fullname="Jana Iyengar" role="editor">
				<organization>Fastly</organization>
			</author>
			<author initials="M." surname="Thomson" fullname="Martin Thomson" role="editor">
				<organization>Mozilla</organization>
			</author>
			<date year="2019" month="January"/>
		</front>
		<seriesInfo name="Internet-Draft" value="draft-ietf-quic-transport (Work in Progress)"/>
	</reference>

	<reference anchor="RLC" target="https://tools.ietf.org/html/draft-ietf-tsvwg-rlc-fec-scheme">
		<front>
		<title>Sliding Window Random Linear Code (RLC) Forward Erasure Correction (FEC) Scheme for FECFRAME</title>
			<author initials="V" surname="Roca" fullname="Vincent Roca"> <organization /> </author>
			<author initials="B" surname="Teibi" fullname="Belkacem Teibi"> <organization /> </author>
			<date month="February" year="2019" />
		</front>
		<seriesInfo name='Work in' value='Progress' />
		<seriesInfo name='Transport Area Working Group (TSVWG)' value='draft-ietf-tsvwg-rlc-fec-scheme (Work in Progress)' />
	</reference>

	<reference anchor="Coding4QUIC" target="https://tools.ietf.org/html/draft-swett-nwcrg-coding-for-quic">
		<front>
		<title>Coding for QUIC</title>
			<author initials="I" surname="Swett" fullname="Ian Swett"> <organization /> </author>
			<author initials="M-J." surname="Montpetit" fullname="Marie-Jose Montpetit"> <organization /> </author>
			<author initials="V" surname="Roca" fullname="Vincent Roca"> <organization /> </author>
			<date month="February" year="2019" />
		</front>
		<seriesInfo name='Work in' value='Progress' />
		<seriesInfo name='NWCRG' value='draft-swett-nwcrg-coding-for-quic (Work in Progress)' />
	</reference>

 	</references>

	<references title="Informative References">
	<!-- ====================== -->

	<reference anchor="nc-taxonomy" target="https://datatracker.ietf.org/doc/draft-irtf-nwcrg-network-coding-taxonomy/">
		<front>
			<title>Taxonomy of Coding Techniques for Efficient Network Communications</title>
			<author initials="V." surname="Roca (Ed.) et al.">
			<organization>INRIA</organization>
			</author>
			<date year="2018" month="June"/>
		</front>
		<seriesInfo name="Request For Comments" value="RFC 8406"/>
	</reference>

   </references>

</back>

</rfc>
